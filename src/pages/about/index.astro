---
import ContentPageLayout from "@/layouts/ContentPageLayout.astro";
import { newtApiClient } from "@/api/newtApiClient";
import type { Member, Client, Partner } from "@/types/newt";
import CustomTypography from "@/components/CustomTypography/index.astro";
import ExternalLinkIcon from "@/components/Icons/ExternalLinkIcon.astro";

const client = newtApiClient();

const [partnerResponse, memberResponse, clientResponse] = await Promise.all([
  client.getContents<Partner>({
    appUid: "website",
    modelUid: "partner",
  }),
  client.getContents<Member>({
    appUid: "website",
    modelUid: "member",
  }),
  client.getContents<Client>({
    appUid: "website",
    modelUid: "client",
  }),
]);

const { items: members } = memberResponse;
const { items: partners } = partnerResponse;
const { items: clients } = clientResponse
---
<ContentPageLayout title="About">
  <section class="body">
    <div class="header">
      <CustomTypography as="h1" variant="title-large">About Impressive</CustomTypography>
      <CustomTypography variant="body-large">Impressiveは、フロントエンド開発とUIデザインに特化した開発チームです。丁寧なコミュニケーションと高い技術力でお客様のビジネス課題を解決します。</CustomTypography>
    </div>

    {
      members && members.length > 0 && (
        <div class="member-index">
          {
            members.map((member) => (
              <a href={`/about/${member.slug}`} class="member-index-item" data-astro-prefetch>
                <div class="member-thumbnail">
                  <img src={`${member.portrait.src}?format=webp&width=724&height=724`} srcset={`${member.portrait.src}?format=webp&width=1448&height=1448`} alt={member.portrait.altText} width={member.portrait?.width} height={member.portrait.height} transition:name={`portrait-${member.slug}`} transition:persist />
                </div>
                <CustomTypography as="h2" variant="body-large">{member.name}</CustomTypography>
              </a>
            ))
          }
        </div>
      )
    }

    {
      partners && partners.length > 0 && (
        <section class="partners" id="partners">
          <CustomTypography as="h2" variant="title-medium">Partners</CustomTypography>
          <div class="partner-index">
            {
              partners.map((partner) => (
                <CustomTypography class="partner-index-item">
                  {
                    partner.website && (
                      <a href={partner.website} target="_blank" rel="noopener noreferrer">
                        {partner.name}
                        <ExternalLinkIcon />
                      </a>
                    ) || partner.name
                  }
                </CustomTypography>
              ))
            }
          </div>
        </section>
      )
    }

    {
      clients && clients.length > 0 && (
        <section class="clients" id="clients">
          <CustomTypography as="h2" variant="title-medium">Clients</CustomTypography>
          <div class="client-index">
            {
              clients.map((client) => (
                <CustomTypography class="client-index-item">
                  {
                    client.website && (
                      <a href={client.website} target="_blank" rel="noopener noreferrer">
                        {client.name}
                        <ExternalLinkIcon />
                      </a>
                    ) || client.name
                  }
                </CustomTypography>
              ))
            }
          </div>
        </section>
      )
    }
    
  </section>
</ContentPageLayout>

<style>
.body {
  display: block grid;
  gap: var(--gap-medium);
}

.member-index {
  display: grid;
  gap: var(--gap-small);
  list-style: none;
  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
  padding: 0 0 var(--gap-small);
}

.member-index-item {
  display: grid;
  grid-template-rows: subgrid;
  gap: 0.8rem;
  grid-row: span 2;
  color: var(--fg-subtle);
  text-decoration: none;
}

.member-index-item:hover {
  color: var(--fg-subtle-hover);
}

.member-thumbnail {
  overflow: hidden;
  aspect-ratio: 1 / 1;
  background-color: var(--bg-subtle);
}

.member-thumbnail img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  filter: grayscale(1);
}

.member-index-item:hover .member-thumbnail img {
  filter: grayscale(0);
}

.no-image {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  background-color: var(--fg-subtle);
  aspect-ratio: 1 / 1;
}

.header {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--gap-medium);
}

.partners {
  display: grid;
  gap: var(--gap-small);
  padding: var(--gap-small) 0;
}

.clients {
  display: grid;
  gap: var(--gap-small);
  padding: var(--gap-small) 0;
}

.partner-index,
.client-index {
  column-count: 6;
  display: block;
}

.partner-index-item,
.client-index-item {
  padding-right: var(--gap-small);
}

@media (max-width: 1280px) {
  .partner-index,
  .client-index {
    column-count: 5;
  }
}

@media (max-width: 1024px) {
  .partner-index,
  .client-index {
    column-count: 4;
  }
}

@media (max-width: 768px) {
  .header {
    grid-template-columns: 1fr;
  }

  .member-index {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  }

  .partner-index,
  .client-index {
    column-count: 3;
  }
}

@media (max-width: 480px) {
  .partner-index,
  .client-index {
    column-count: 2;
  }
}
</style>