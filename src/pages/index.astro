---
import { newtApiClient } from "@/api/newtApiClient";
import { getFeed } from "@/api/rssClient";
import type { Work, Domain } from "@/types/newt";

import BaseLayout from "@/layouts/BaseLayout.astro";
import CustomTypography from "@/components/CustomTypography/index.astro";
import ExternalLinkIcon from "@/components/Icons/ExternalLinkIcon.astro";

const client = newtApiClient();

const [domainResponse, workResponse, feedResponse] = await Promise.all([
	client.getContents<Domain>({
		appUid: "website",
		modelUid: "domain",
		query: {
			order: ["-_sys.customOrder"]
		},
	}),
	client.getContents<Work>({
		appUid: "website",
		modelUid: "work",
		query: {
			limit: 12,
		},
	}),
	getFeed({
		limit: 5,
	}),
]);

const { items: domains } = domainResponse;
const { items: works } = workResponse;
const { items: feed } = feedResponse;
---
<BaseLayout title="Top">
	<section class="body">
		<div class="hero">
			<CustomTypography as="h1" variant="title-large">
				Impressive makes your business better.
			</CustomTypography>

			<CustomTypography variant="display" class="text">
				Coding the Success,<br>Designing Future.
			</CustomTypography>
		</div>
	
		<CustomTypography variant="title-small" class="lead">
			Impressiveは、フロントエンド開発とUIデザインに特化した開発チームです。丁寧なコミュニケーションと高い技術力でお客様のビジネス課題を解決します。
		</CustomTypography>

		{
			domains && domains.length > 0 && (
				<div class="domains">
					<CustomTypography as="h2" variant="title-large">
						What we do
					</CustomTypography>

					<div class="domain-list">
						{domains.map((domain) => (
							<div class="domain-list-item">
								<CustomTypography as="h3" variant="title-medium">
									{domain.name}
								</CustomTypography>
			
								<CustomTypography variant="body-large" class="domain-description">
									{domain.description}
								</CustomTypography>
							</div>
						))}
					</div>
				</div>
			)
		}

		{
			works && works.length > 0 && (
				<div class="works">
					<CustomTypography as="h2" variant="title-large">
						Works
					</CustomTypography>

					<div class="work-index">
						{works.map((work) => (
							<a href={`/works/${work.slug}`} class="work-index-item">
								<div class="work-thumbnail">
									<img src={`${work.coverImage.src}?format=webp&fit=outside&width=504&height=504`} srcset={`${work.coverImage.src}?format=webp&fit=outside&width=1008&height=1008`} alt={work.coverImage.altText} width={work.coverImage.width} height={work.coverImage.height} />
								</div>
								<CustomTypography as="h2" variant="title-small">{work.title}</CustomTypography>
							</a>
						))}
					</div>
				</div>
			)
		}

		{
			feed && feed.length > 0 && (
				<div class="podcasts">
					<CustomTypography as="h2" variant="title-large">
						Podcasts
					</CustomTypography>

					<div class="podcast-list">
						{feed.map((item) => (
							<a href={item.link} target="_blank" class="podcast-list-item" rel="noopener noreferrer">
								<CustomTypography as="h3" variant="title-small">
										{item.title}
										<ExternalLinkIcon />
								</CustomTypography>

								<CustomTypography variant="body-large" class="podcast-list-item-description">
									{item.contentSnippet}
								</CustomTypography>
			
								<CustomTypography variant="body-large" class="podcast-list-item-date">
									{new Date(item.pubDate).toLocaleDateString("en-US", { month: "long", year: "numeric", day: "numeric"})}
								</CustomTypography>
							</a>
						))}

						<CustomTypography variant="body-large" as="a" href="https://podcasters.spotify.com/pod/show/impv-timz/" target="_blank" rel="noopener noreferrer" class="more-link">
							Show more
						</CustomTypography>
					</div>
				</div>
			)
		}
	</section>
</BaseLayout>

<style>
.body {
  display: block grid;
	grid-template-columns: repeat(2, 1fr);
	grid-template-areas:
		"hero hero"
		"lead ."
		"domains domains"
		"works works"
		"podcasts podcasts"
	;
  gap: var(--gap-large);
  padding: var(--gap-large) 0;
}

.hero {
	padding: var(--gap-large) 0;
	grid-area: hero;
	display: grid;
	gap: var(--gap-medium);
}

.lead {
	grid-area: lead;
}

.domains {
	grid-area: domains;
	display: grid;
	gap: var(--gap-small);
	padding: var(--gap-medium) 0;
}

.domain-list {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(337px, 1fr));
	gap: var(--gap-medium);
}

.domain-list-item {
	display: grid;
	gap: 1.6rem;
	grid-template-rows: subgrid;
	grid-row: span 2;
}

.domain-description {
	color: var(--fg-subtle);
}

.podcasts {
	grid-area: podcasts;
	display: grid;
	gap: var(--gap-small);
	padding: var(--gap-medium) 0;
}

.podcast-list {
	display: grid;
}

.podcast-list-item {
	display: grid;
	gap: 0.8rem;
	padding: 2.4rem;
	border-top: 1px solid var(--border-default);
	border-bottom: 1px solid var(--border-default);
	margin-top: -1px;
	flex-wrap: wrap;
	text-decoration: none;
	color: currentColor;
}

.podcast-list-item:hover {
	background-color: var(--bg-default-hover);
}

.podcast-list-item-description {
	color: var(--fg-subtle);
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.podcast-list-item-date {
	color: var(--fg-subtle);
}

.more-link {
	margin-top: 2.4rem;
	justify-self: flex-end;
}

.works {
	grid-area: works;
	display: grid;
	gap: var(--gap-small);
	padding: var(--gap-medium) 0;
}

.work-index {
	display: flex;
	overflow-x: auto;
	gap: var(--gap-medium);
	padding-right: 50dvw;
	scroll-snap-type: x mandatory;
}

.work-thumbnail {
  overflow: hidden;
  aspect-ratio: 1 / 1;
  padding: 3.6rem;
  background-color: var(--bg-muted);
	width: 30dvw;
	scroll-snap-align: start;
}

.work-index-item {
	color: var(--fg-subtle);
	text-decoration: none;
	display: grid;
	gap: 0.8rem;
}

.work-index-item:hover .work-thumbnail {
  background-color: var(--bg-muted-hover);
}

.work-index-item:hover {
	color: var(--fg-subtle-hover);
}

.work-thumbnail img,
.work-thumbnail video {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

@media (max-width: 1024px) {
	.body {
		grid-template-areas:
			"hero hero"
			"lead lead"
			"domains domains"
			"works works"
			"podcasts podcasts"
		;
	}
}

@media (max-width: 768px) {
	.body {
		grid-template-columns: 1fr;
		grid-template-areas:
			"hero"
			"lead"
			"domains"
			"works"
			"podcasts"
		;
	}

	.domain-list {
		grid-template-columns: 1fr;
	}

	.domain-list-item {
		gap: 0.8rem;
	}

	.work-thumbnail {
		width: 72dvw;
		padding: 2.4rem;
	}

	.podcast-list-item {
		padding: 1.6rem 0;
	}

	.podcast-list-item-description {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		white-space: normal;
	}
}
</style>