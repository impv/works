---
import { newtApiClient } from "@/api/newtApiClient";
import { getFeed } from "@/api/rssClient";
import type { Domain } from "@/types/newt";

import BaseLayout from "@/layouts/BaseLayout.astro";
import CustomTypography from "@/components/CustomTypography/index.astro";

const client = newtApiClient();

const { items: domains } = await client.getContents<Domain>({
  appUid: "website",
  modelUid: "domain",
	query: {
		order: ["-_sys.customOrder"]
	},
});

const { items: feed } = await getFeed({
	limit: 5,
})
---
<BaseLayout title="Top">
	<section class="body">
		<div class="hero">
			<CustomTypography as="h1" variant="title-large">
				Impressive makes your business better.
			</CustomTypography>

			<CustomTypography variant="display">
				Coding the Success,<br>Designing Future.
			</CustomTypography>
		</div>
	
		<CustomTypography variant="title-small" class="lead">
			Impressiveは、フロントエンド開発とUIデザインに特化した開発チームです。丁寧なコミュニケーションと高い技術力でお客様のビジネス課題を解決します。
		</CustomTypography>

		{
			domains && domains.length > 0 && (
				<div class="domains">
					<CustomTypography as="h2" variant="title-large">
						What we do
					</CustomTypography>

					<div class="domain-list">
						{domains.map((domain) => (
							<div class="domain-list-item">
								<CustomTypography as="h3" variant="title-medium">
									{domain.name}
								</CustomTypography>
			
								<CustomTypography variant="body-large" class="domain-description">
									{domain.description}
								</CustomTypography>
							</div>
						))}
					</div>
				</div>
			)
		}

		{
			feed && feed.length > 0 && (
				<div class="podcasts">
					<CustomTypography as="h2" variant="title-large">
						Podcast
					</CustomTypography>

					<div class="podcast-list">
						{feed.map((item) => (
							<div class="podcast-list-item">
								<CustomTypography as="h3" variant="title-medium">
									<a href={item.link} target="_blank" rel="noopener noreferrer">
										{item.title}
									</a>
								</CustomTypography>
			
								<CustomTypography variant="body-large" class="domain-description">
									{new Date(item.pubDate).toLocaleDateString("en-US", { month: "long", year: "numeric", day: "numeric"})}
								</CustomTypography>
							</div>
						))}
					</div>

					<CustomTypography variant="body-large" as="a" href="https://podcasters.spotify.com/pod/show/impv-timz/" target="_blank" rel="noopener noreferrer" class="more-link">
						Show more
					</CustomTypography>
				</div>
			)
		
		}

	</section>
</BaseLayout>

<style>
.body {
  display: block grid;
	grid-template-columns: repeat(2, 1fr);
	grid-template-areas:
		"hero hero"
		"lead ."
		"domains domains"
		"podcasts podcasts"
	;
  gap: var(--gap-lg);
  padding: var(--gap-lg) 0;
}

.hero {
	padding: var(--gap-lg) 0;
	grid-area: hero;
	display: grid;
	gap: var(--gap-md);
}

.lead {
	grid-area: lead;
}

.domains {
	grid-area: domains;
	display: grid;
	gap: var(--gap-sm);
	padding: var(--gap-md) 0;
}

.domain-list {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));
	gap: var(--gap-md);
}

.domain-list-item {
	display: grid;
	gap: 1.6rem;
	grid-template-rows: subgrid;
	grid-row: span 2;
}

.podcasts {
	grid-area: podcasts;
	display: grid;
	gap: var(--gap-sm);
	padding: var(--gap-md) 0;
}

.podcast-list {
	display: grid;
	border-bottom: 1px solid var(--border-default);
}

.podcast-list-item {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: 0.8rem;
	grid-template-rows: subgrid;
	grid-row: span 2;
	padding: 2.4rem 0;
	border-top: 1px solid var(--border-default);
	flex-wrap: wrap;
}

.more-link {
	justify-self: flex-end;
}

@media (max-width: 1024px) {
	.body {
		grid-template-areas:
			"hero hero"
			"lead lead"
			"domains domains"
			"podcasts podcasts"
		;
	}
}

@media (max-width: 768px) {
	.body {
		grid-template-columns: 1fr;
		grid-template-areas:
			"hero"
			"lead"
			"domains"
			"podcasts"
		;
	}

	.domain-list-item {
		gap: 0.8rem;
	}
}
</style>