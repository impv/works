---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { newtApClient } from "@/api/newtApClient";
import type { Member, Work } from "@/types/newt";

export const getStaticPaths = async () => {
	const client = newtApClient();

	const [memberResponse, workResponse] = await Promise.all([
		client.getContents<Member>({
			appUid: "website",
			modelUid: "member",
		}),
		client.getContents<Work>({
			appUid: "website",
			modelUid: "work",
			query: {
				limit: 1000,
			}
		}),
	]);

	const { items: members } = memberResponse;
	const { items: works } = workResponse;
	
	return members.map((member) => {
		const memberWorks = works.filter(work =>
			work.teams?.some(team =>
				team.data.members.some(memberInTeam => memberInTeam.slug === member.slug)
			)
		);

		return {
			params: { slug: member.slug },
			props: {
				member,
				works: memberWorks,
			},
		};
	});
};

const { member, works } = Astro.props;
---
<BaseLayout title={member.name}>
	<h1>{member.name}</h1>

	<dl>
		<dt>Domains</dt>
		{
			member.domains?.map((domain) => (
				<dd>{domain.name}</dd>
			))
		}
	</dl>

	<dl>
		<dt>Technology Stacks</dt>
		{
			member.technologyStacks?.map((technology) => (
				<dd>{technology.name}</dd>
			))
		}
	</dl>

	<dl>
		<dt>Works</dt>
		{
			works.map((work) => (
				<dd>
					<a href={`/works/${work.slug}`}>{work.title}</a>
				</dd>
			))
		}
	</dl>
</BaseLayout>